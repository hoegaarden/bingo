---
apiVersion: v1
kind: Namespace
metadata:
  name: cluster-packages
  annotations:
    kapp.k14s.io/change-group: cluster-packages/ns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-packages
  namespace: cluster-packages
  annotations:
    kapp.k14s.io/change-group: cluster-packages/rbac
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-packages
  annotations:
    kapp.k14s.io/change-group: cluster-packages/rbac
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs:     ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-packages
  annotations:
    kapp.k14s.io/change-group: cluster-packages/rbac
subjects:
- kind: ServiceAccount
  name: cluster-packages
  namespace: cluster-packages
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: cluster-packages
---
#@ load("@ytt:data", "data")
---
apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: base
  namespace: cluster-packages
  annotations:
    kapp.k14s.io/change-rule.0: "upsert after upserting kapp-controller/crd"
    kapp.k14s.io/change-rule.1: "upsert after upserting cluster-packages/ns"
    kapp.k14s.io/change-rule.2: "delete before deleting cluster-packages/ns"
    kapp.k14s.io/change-rule.3: "delete before deleting cluster-packages/rbac"
spec:
  serviceAccountName: cluster-packages
  fetch:
  - git:
      url: https://github.com/hoegaarden/bingo
      ref: origin/main
  template:
  - ytt:
      paths:
      - example/apps/common
      valuesFrom:
      - path: #@ "/".join(["example", data.values.clusterNS, data.values.cluster, "values.yml"])
  deploy:
  - kapp: {}
